[
    /////////////////////
    // Overlay control //
    /////////////////////

    {
        "keys": ["ctrl+j"],
        "command": "tree_view_move_down",
        "context": [
            { "key": "overlay_visible" },
            { "key": "control", "operand": "overlay_control" }
        ]
    },
    {
        "keys": ["ctrl+k"],
        "command": "tree_view_move_up",
        "context": [
            { "key": "overlay_visible" },
            { "key": "control", "operand": "overlay_control" }
        ]
    },
    {
        "keys": ["ctrl+s"],
        "command": "overlay_open_file",
        "args": { "split": true },
        "context": [
            { "key": "overlay_visible" },
            { "key": "control", "operand": "overlay_control" }
        ]
    },
    {
        "keys": ["ctrl+t"],
        "command": "overlay_open_file",
        "args": { "tab": true },
        "context": [
            { "key": "overlay_visible" },
            { "key": "control", "operand": "overlay_control" }
        ]
    },
    {
        "keys": ["ctrl+v"],
        "command": "overlay_open_file",
        "args": { "vsplit": true },
        "context": [
            { "key": "overlay_visible" },
            { "key": "control", "operand": "overlay_control" }
        ]
    },

    ////////////////////////////////
    // Autocomplete popup control //
    ////////////////////////////////

    {
        "keys": ["ctrl+n"],
        "command": "tree_view_move_down",
        "context": [
            { "key": "auto_complete_visible" }
            // @todo Add control operand constraint. What is the control operand for the autocomplete popup?
        ]
    },
    {
        "keys": ["ctrl+j"], // alias of ctrl+n
        "command": "tree_view_move_down",
        "context": [
            { "key": "auto_complete_visible" }
            // @todo Add control operand constraint. What is the control operand for the autocomplete popup?
        ]
    },
    {
        "keys": ["ctrl+p"],
        "command": "tree_view_move_up",
        "context": [
            { "key": "auto_complete_visible" }
            // @todo Add control operand constraint. What is the control operand for the autocomplete popup?
        ]
    },
    {
        "keys": ["ctrl+k"], // alias of ctrl+p
        "command": "tree_view_move_up",
        "context": [
            { "key": "auto_complete_visible" }
            // @todo Add control operand constraint. What is the control operand for the autocomplete popup?
        ]
    },

    /////////////////////////////////
    // Tree View - Sidebar control //
    /////////////////////////////////

    {
        "keys": [",", "d"],
        "command": "tree_view_toggle",
        "args": { "sidebar_currently_focused": true },
        "context": [
            { "key": "control", "operand": "sidebar_tree" },
            { "key": "setting.polyfill.vi_tree_view_toggle" }
        ]
    },
    {
        "keys": [",", "d"],
        "command": "tree_view_toggle",
        "args": { "sidebar_currently_focused": false },
        "context": [
            { "key": "control", "operand": "sidebar_tree", "operator": "not_equal" },
            { "key": "setting.command_mode" },
            { "key": "setting.polyfill.vi_tree_view_toggle" }
        ]
    },
    {
        "keys": ["h"],
        "command": "tree_view_move_left",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["l"],
        "command": "tree_view_move_right",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["j"],
        "command": "tree_view_move_down",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["k"],
        "command": "tree_view_move_up",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["a"],
        "command": "tree_view_add_file",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["A"],
        "command": "tree_view_add_folder",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["ctrl+\\"],
        "command": "tree_view_reveal_active_file"
    },
    {
        "keys": ["d"],
        "command": "tree_view_duplicate",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["f"],
        "command": "tree_view_finder",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["f2"],
        "command": "tree_view_move",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["i"],
        "command": "tree_view_open_file",
        "args": { "split": true },
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["J"],
        "command": "tree_view_go_to_child_node",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["m"],
        "command": "tree_view_move",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["p"],
        "command": "tree_view_go_to_root_node",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["P"],
        "command": "tree_view_go_to_parent_node",
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["s"],
        "command": "tree_view_open_file",
        "args": { "vsplit": true },
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["t"],
        "command": "tree_view_open_file",
        "args": { "tab": true },
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },
    {
        "keys": ["q"],
        "command": "tree_view_toggle",
        "args": { "sidebar_currently_focused": true },
        "context": [
            { "key": "control", "operand": "sidebar_tree" }
        ]
    },

    //////////////////////////
    // Set Layout Polyfills //
    //////////////////////////

    {
        "keys": ["alt+shift+2"],
        "command": "polyfill_set_layout",
        "args":
        {
            "cols": [0.0, 0.5, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
        }
    },
    {
        "keys": ["alt+shift+3"],
        "command": "polyfill_set_layout",
        "args":
        {
            "cols": [0.0, 0.33, 0.66, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]
        }
    },
    {
        "keys": ["alt+shift+4"],
        "command": "polyfill_set_layout",
        "args":
        {
            "cols": [0.0, 0.25, 0.5, 0.75, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1], [3, 0, 4, 1]]
        }
    },
    {
        "keys": ["alt+shift+5"],
        "command": "polyfill_set_layout",
        "args":
        {
            "cols": [0.0, 0.5, 1.0],
            "rows": [0.0, 0.5, 1.0],
            "cells":
            [
                [0, 0, 1, 1], [1, 0, 2, 1],
                [0, 1, 1, 2], [1, 1, 2, 2]
            ]
        }
    },
    {
        "keys": ["alt+shift+8"],
        "command": "polyfill_set_layout",
        "args":
        {
            "cols": [0.0, 1.0],
            "rows": [0.0, 0.5, 1.0],
            "cells": [[0, 0, 1, 1], [0, 1, 1, 2]]
        }
    },
    {
        "keys": ["alt+shift+9"],
        "command": "polyfill_set_layout",
        "args":
        {
            "cols": [0.0, 1.0],
            "rows": [0.0, 0.33, 0.66, 1.0],
            "cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]
        }
    },
    {
        "keys": ["ctrl+alt+r"],
        "command": "prompt_open_recent_project",
        "context": [
            {
                "key": "setting.polyfill.keymaps"
            }
        ]
    }
]
